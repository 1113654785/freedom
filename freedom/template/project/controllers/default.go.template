package controllers

import (
	"github.com/8treenet/freedom"
	"{{.PackagePath}}/services"
	"github.com/kataras/iris"
)

func init() {
	freedom.Booting(func(initiator freedom.Initiator) {
		serFunc := func(ctx iris.Context) (m *services.DefaultService) {
			initiator.GetService(ctx, &m)
			return
		}
		initiator.BindController("/", &DefaultController{}, serFunc)
	})
}

type DefaultController struct {
	Ser     *services.DefaultService
	Runtime freedom.Runtime
}

// Get handles the GET: / route.
func (c *DefaultController) Get() string {
	c.Runtime.Logger().Infof("我是控制器")
	return c.Ser.Get()
}

// GetHello handles the GET: /hello route.
func (c *DefaultController) GetHello() string {
	return "hello"
}

// GetUserBy handles the GET: /user/{username:string} route.
func (c *DefaultController) GetUserBy(username string) string {
	return username
}

// GetAgeByUserBy handles the GET: /age/{age:int}/user/{user:string} route.
func (c *DefaultController) GetAgeByUserBy(age int, user string) (result struct {
	User string `json:"user"`
	Age  int    `json:"age"`
}, e error) {
	result.Age = age
	result.User = user
	return
}
